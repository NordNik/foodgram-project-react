version: "3.3"
services:
  db:
    image: postgres:13.0-alpine
    env_file:
      - ./.env
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - foodgram_network

  web:
    build: ../backend/foodgram/
    # image: niknord/foodgram:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    container_name: web
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - foodgram_network

  frontend:
    # build: ../frontend
      # context: ../frontend
      # dockerfile: Dockerfile
    # ports:
    #   - "3000:3000"
    image: niknord/frontend:latest
    volumes:
      - ../frontend/build/:/app/result_build/
    container_name: frontend
    depends_on:
      - web
    networks:
      - foodgram_network

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build/:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static_value/
      - media_value:/var/html/media_value/
      - static_backend_value:/var/html/static_backend_value/
      - media_backend_value:/var/html/media_backend_value/
    depends_on:
      - web
      - frontend
    networks:
      - foodgram_network
  
networks:
  foodgram_network:
    driver: bridge
    name: foodgram_network


volumes:
  db_data:
  static_value:
  media_value:
